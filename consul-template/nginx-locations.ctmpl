{{ $ENVIRONMENT := or (env "ENVIRONMENT") "dev" }}

server {
    listen       80;
    server_name  localhost;
    client_max_body_size 100m;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}

# Setting up nginx for == {{ print $ENVIRONMENT | toUpper }} == environment
{{ "" }}        
{{- range services -}}
    {{- if in .Tags "public-route" -}}
        {{- $boxes := service .Name }}
        
        {{- if gt (len $boxes) 0 -}}
        {{- if keyExists ( print "/dev/services/" .Name "/publicPath") -}}
        {{- if keyExists ( print "/dev/services/" .Name "/routedPath") -}}
{{ "" }}        

    # route service {{ .Name }} from {{ key ( print "/dev/services/" .Name "/publicPath") }} to path {{ key ( print "/dev/services/" .Name "/routedPath") }}
    location {{ key ( print "/dev/services/" .Name "/publicPath") }} {
        proxy_pass http://{{.Name}}-pool{{ key ( print "/dev/services/" .Name "/routedPath") }};
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        proxy_redirect    off;
        proxy_set_header  X-Real-IP         $remote_addr;
        proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header  Host              $host;
        proxy_set_header  X-Forwarded-Proto $scheme;
    }
        {{- end -}}
        {{- end -}}
        {{- end -}}
    {{- end -}}
{{- end -}}
{{ "" }}  
}

